{"version":3,"sources":["service.ts"],"names":["app","app.services","app.services.StorageType","app.services.IntergenStorageService","app.services.IntergenStorageService.constructor","app.services.IntergenStorageService.set","app.services.IntergenStorageService.get","app.services.IntergenStorageService.configure","app.services.IntergenStorageService.removeAll","app.services.IntergenStorageService.remove","app.services.IntergenStorageService.resolveStorageType","app.services.IntergenStorageService.overrideCacheItem","app.services.IntergenStorageService.retrieve","app.services.IntergenStorageService.store","app.services.IntergenStorageService.prefix","app.services.IntergenStorageService.hash","app.services.factory"],"mappings":"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","file":"service.js","sourceRoot":"D:/dev/Intergen.ClientCache/Intergen.ClientCache/","sourcesContent":["/* tslint:disable:no-bitwise */\r\n'use strict';\r\n\r\nmodule app.services {\r\n    export interface IIntergenStorageService {\r\n        set(key: string, value: any, storageType?: StorageType): ng.IPromise<any>;\r\n        get<T>(key: string, storageType?: StorageType): T;\r\n        configure(options: IStorageOptions): void;\r\n        remove(key: string, storageType?: StorageType): void;\r\n        removeAll(storageType?: StorageType): void;\r\n    }\r\n\r\n    export interface IStorageOptions {\r\n        storagePrefix?: string;\r\n        useCompression?: boolean;\r\n        storageType?: StorageType;\r\n    }\r\n\r\n    export enum StorageType {\r\n        Local,\r\n        Session,\r\n        All\r\n    }\r\n\r\n    export class IntergenStorageService implements IIntergenStorageService {\r\n\r\n        private options: IStorageOptions = {\r\n            storagePrefix: 'intergen',\r\n            useCompression: false,\r\n            storageType: StorageType.All\r\n        };\r\n\r\n        constructor(private $q: ng.IQService, private $timeout: ng.ITimeoutService) {\r\n        }\r\n\r\n        public set(key: string, value: any, storageType?: StorageType): ng.IPromise<any> {\r\n            if (angular.isUndefined(key)) throw new Error('Argument null exception. Parameter name: key. Function called: set');\r\n            if (angular.isUndefined(value)) throw new Error('Argument null exception. Parameter name: value. Function called: set');\r\n\r\n            var stringValue = value;\r\n            var deffered = this.$q.defer();\r\n\r\n            // Only stringify if json.\r\n            if (angular.isObject(stringValue) || angular.isArray(stringValue) || angular.isNumber(+stringValue || stringValue)) {\r\n                stringValue = angular.toJson(value);\r\n            }\r\n\r\n            this.$timeout(() => {\r\n                var shouldOverride = this.overrideCacheItem(key, stringValue, this.resolveStorageType(storageType));\r\n\r\n                if (shouldOverride) {\r\n                    if (this.options.useCompression) {\r\n                        stringValue = LZString.compressToBase64(stringValue);\r\n                    };\r\n                    this.store(key, stringValue, this.resolveStorageType(storageType));\r\n                }\r\n                deffered.resolve();\r\n            });\r\n            return deffered.promise;\r\n        }\r\n\r\n        public get<T>(key: string, storageType?: StorageType): T {\r\n            if (angular.isUndefined(key)) throw new Error('Argument null exception. Parameter name: key. Function called: get');\r\n\r\n            var stringValue = this.retrieve(key, this.resolveStorageType(storageType));\r\n\r\n            if (angular.isUndefined(stringValue) || stringValue === null) {\r\n                return undefined;\r\n            }\r\n\r\n            if (this.options.useCompression) stringValue = LZString.decompressFromBase64(stringValue);\r\n\r\n            var value;\r\n            try {\r\n                value = angular.fromJson(stringValue);\r\n            } catch (e) {\r\n                value = stringValue;\r\n            }\r\n\r\n            return value;\r\n        }\r\n\r\n        public configure(options: IStorageOptions) {\r\n            angular.extend(this.options, options);\r\n        }\r\n\r\n        public removeAll(storageType?: StorageType): void {\r\n            storageType = this.resolveStorageType(storageType);\r\n\r\n            switch (storageType) {\r\n                case StorageType.Local:\r\n                    localStorage.clear();\r\n                    break;\r\n                case StorageType.Session:\r\n                    sessionStorage.clear();\r\n                    break;\r\n                default:\r\n                    sessionStorage.clear();\r\n                    localStorage.clear();\r\n            }\r\n        }\r\n\r\n        public remove(key: string, storageType?: StorageType): void {\r\n            key = this.prefix(key);\r\n            storageType = this.resolveStorageType(storageType);\r\n            switch (storageType) {\r\n                case StorageType.Local:\r\n                    localStorage.removeItem(key);\r\n                    break;\r\n                case StorageType.Session:\r\n                    sessionStorage.removeItem(key);\r\n                    break;\r\n                default:\r\n                    sessionStorage.removeItem(key);\r\n                    localStorage.removeItem(key);\r\n            }\r\n        }\r\n\r\n        private resolveStorageType(storageType: StorageType) {\r\n            return angular.isUndefined(storageType) ? this.options.storageType : storageType;\r\n        }\r\n\r\n        private overrideCacheItem(key: string, stringValue: string, storageType: StorageType) {\r\n            var itemExist = this.retrieve(key, storageType);\r\n            if (angular.isUndefined(itemExist) || itemExist === null) return true;\r\n            if (this.options.useCompression) itemExist = LZString.decompressFromBase64(itemExist);\r\n            var origionalHash = this.hash(itemExist);\r\n            var newHash = this.hash(stringValue);\r\n            return origionalHash !== newHash;\r\n        }\r\n\r\n        private retrieve(key: string, storageType: StorageType): string {\r\n            key = this.prefix(key);\r\n\r\n            switch (storageType) {\r\n                case StorageType.Local:\r\n                    return localStorage.getItem(key);\r\n\r\n                case StorageType.Session:\r\n                    return sessionStorage.getItem(key);\r\n\r\n                default:\r\n                    var sessionStoreValue = sessionStorage.getItem(key);\r\n                    if (!angular.isUndefined(sessionStorage)) return sessionStoreValue;\r\n                    return localStorage.getItem(key);\r\n            }\r\n        }\r\n\r\n        private store(key: string, value: string, storageType: StorageType): void {\r\n            key = this.prefix(key);\r\n\r\n            switch (storageType) {\r\n                case StorageType.Local:\r\n                    localStorage.setItem(key, value);\r\n                    break;\r\n\r\n                case StorageType.Session:\r\n                    sessionStorage.setItem(key, value);\r\n                    break;\r\n\r\n                default:\r\n                    localStorage.setItem(key, value);\r\n                    sessionStorage.setItem(key, value);\r\n            }\r\n        }\r\n\r\n        private prefix(key: string) {\r\n            return this.options.storagePrefix + '.' + key;\r\n        }\r\n\r\n        private hash(value: string) {\r\n            var hash = 0, i, chr, len;\r\n            if (value.length === 0) return hash;\r\n            for (i = 0, len = value.length; i < len; i++) {\r\n                chr = value.charCodeAt(i);\r\n                hash = ((hash << 5) - hash) + chr;\r\n                hash |= 0;\r\n            }\r\n            return hash;\r\n        }\r\n    }\r\n\r\n    function factory($q: ng.IQService, $timeout: ng.ITimeoutService): IIntergenStorageService {\r\n        return new IntergenStorageService($q, $timeout);\r\n    }\r\n    factory.$inject = [\r\n        '$q',\r\n        '$timeout'\r\n    ];\r\n\r\n    angular\r\n        .module('app.services')\r\n        .factory('app.services.IntergenStorageService', factory);\r\n}"]}